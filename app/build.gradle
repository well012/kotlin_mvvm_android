apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-platform-android'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId 'com.eltaher.task'
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.task.CustomTestRunner"
    }
    buildFeatures{
        viewBinding = true
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension = 'default'
            applicationIdSuffix = ".dev"
        }
        prod {
            dimension = 'default'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
    defaultConfig {
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/resources'
            test {
                resources.srcDirs += sharedTestDir
            }
            androidTest {
                resources.srcDirs += sharedTestDir
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "androidx.annotation:annotation:$annotationVersion"

    /**-------------------testing libs------------------------------------------**/
    //UI Testing , AndroidJUnitRunner and JUnit Rules &Espresso dependencies
    //junit 5
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    testImplementation "org.junit.platform:junit-platform-runner:$junitRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXJunitVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoIntentsVersion"
    androidTestImplementation ("androidx.test.espresso:espresso-core:$espressoCoreVersion",{
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    implementation "androidx.arch.core:core-testing:$coreTestingVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"

    /**-------------------------------------------------------------**/

    //android support & recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorLayoutVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.cardview:cardview:$cardViewVersion"
    implementation "androidx.activity:activity:$activityVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    //Logging
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptorVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"

    //picasso
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    //MultiDex
    implementation "androidx.multidex:multidex:$multiDexVersion"

    //Mockk
//    androidTestImplementation "io.mockk:mockk-android:$mockVersion"
    testImplementation "io.mockk:mockk:$mockVersion"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesCoreVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutinesCommonVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKTXVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKTXVersion"
}